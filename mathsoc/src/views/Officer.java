package views;


import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Adrian
 */
public class Officer extends javax.swing.JFrame {

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
    /**
     * Creates new form Officer
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
    /**
     */
    DefaultTableModel panelmodel;
    private String userPosition;
    int counter;
    final String defaultpass = "1234";
    String officerPosition;
    final String task = "Officer";
    String officerID;
    public Officer() {
        initComponents();
        
        ImageIcon icon = new ImageIcon("\\views\\images\\MATHSOC LOGO.png");
        Officer.this.setIconImage(icon.getImage());
          try {
                load();
            } catch (SQLException ex) {
                // Logger.getLogger(frameRegister.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                //Logger.getLogger(frameRegister.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    
    public void load() throws SQLException, ClassNotFoundException{
          
        if(cb_pos.getSelectedIndex() == 0){
            btn_confirm.setEnabled(false);
        }  
         try{
        Class.forName("com.mysql.jdbc.Driver");
           Connection con = DriverManager.getConnection
           ("jdbc:mysql://localhost:3306/math", "root", "");
           Statement stt=con.createStatement();
             ResultSet rss=stt.executeQuery
                ("select * from officers where 1");
                    
                  panelmodel = new DefaultTableModel();
                    officersTable.setModel(panelmodel);
                
                    panelmodel.addColumn("ID Number");
                    panelmodel.addColumn("Last Name");
                    panelmodel.addColumn("First Name");
                    panelmodel.addColumn("Middle Initial");
                    panelmodel.addColumn("CYS");
                    panelmodel.addColumn("Position");
                        
            while(rss.next())
             {
                 panelmodel.addRow(new String[]{rss.getString("studID"),rss.getString("lname"),rss.getString("fname"),rss.getString("mi"),rss.getString("course") + "" + rss.getString("year") + "" +rss.getString("section"),rss.getString("position")});
               
             }
              
              
        }
         catch(Exception e){}
         
         
    }
    
    public void setPosition(String userPosition){
        this.userPosition = userPosition;
    }
    
    
    public String getPosition(){
        return userPosition;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frame_changePass = new javax.swing.JFrame();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        newPass = new javax.swing.JPasswordField();
        confirmPass = new javax.swing.JPasswordField();
        oldPass = new javax.swing.JPasswordField();
        okbtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        OfficerPanel = new javax.swing.JTabbedPane();
        officerList = new javax.swing.JScrollPane();
        officerListPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        officersTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        updateOfficersPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_lname = new javax.swing.JTextField();
        txt_fname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_mi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_crs = new javax.swing.JTextField();
        txt_year = new javax.swing.JTextField();
        txt_sec = new javax.swing.JTextField();
        txt_idnum = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        btn_confirm = new javax.swing.JButton();
        cb_pos = new javax.swing.JComboBox<>();
        btn_next = new javax.swing.JButton();
        btn_prev = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btn_changePass = new javax.swing.JButton();
        btn_mainmenu = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        frame_changePass.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        frame_changePass.setTitle("Change Password");
        frame_changePass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        frame_changePass.setForeground(java.awt.Color.lightGray);
        frame_changePass.setLocation(new java.awt.Point(500, 200));
        frame_changePass.setResizable(false);
        frame_changePass.setSize(new java.awt.Dimension(400, 350));
        frame_changePass.setType(java.awt.Window.Type.POPUP);
        frame_changePass.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel13.setText("Confirm password:");
        frame_changePass.getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, 20));

        jLabel14.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel14.setText("Enter old password:");
        frame_changePass.getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 20));

        jLabel15.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel15.setText("Enter new password:");
        frame_changePass.getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, 20));

        newPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newPassKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newPassKeyReleased(evt);
            }
        });
        frame_changePass.getContentPane().add(newPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 130, -1));

        confirmPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPassActionPerformed(evt);
            }
        });
        frame_changePass.getContentPane().add(confirmPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 130, -1));
        frame_changePass.getContentPane().add(oldPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 130, -1));

        okbtn.setBackground(new java.awt.Color(0, 51, 51));
        okbtn.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        okbtn.setForeground(new java.awt.Color(255, 255, 255));
        okbtn.setText("OK");
        okbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okbtnActionPerformed(evt);
            }
        });
        frame_changePass.getContentPane().add(okbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 120, 40));

        cancelbtn.setBackground(new java.awt.Color(0, 51, 51));
        cancelbtn.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        cancelbtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelbtn.setText("Cancel");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        frame_changePass.getContentPane().add(cancelbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 130, 40));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Officer");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        OfficerPanel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N

        officerList.setHorizontalScrollBar(null);

        officerListPanel.setLayout(null);

        officersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(officersTable);

        officerListPanel.add(jScrollPane3);
        jScrollPane3.setBounds(18, 6, 770, 397);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/webtreats-paper-pattern-1-grey.jpg"))); // NOI18N
        jLabel11.setText("jLabel11");
        officerListPanel.add(jLabel11);
        jLabel11.setBounds(0, 0, 810, 420);

        officerList.setViewportView(officerListPanel);

        OfficerPanel.addTab("Officer List", officerList);

        updateOfficersPanel.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel1.setText("Position:");
        updateOfficersPanel.add(jLabel1);
        jLabel1.setBounds(27, 19, 99, 21);

        txt_lname.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        updateOfficersPanel.add(txt_lname);
        txt_lname.setBounds(210, 130, 240, 27);

        txt_fname.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        txt_fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fnameActionPerformed(evt);
            }
        });
        updateOfficersPanel.add(txt_fname);
        txt_fname.setBounds(210, 230, 240, 27);

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel3.setText("Last Name:");
        updateOfficersPanel.add(jLabel3);
        jLabel3.setBounds(40, 140, 110, 21);

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel4.setText("First Name: ");
        updateOfficersPanel.add(jLabel4);
        jLabel4.setBounds(40, 240, 132, 20);

        txt_mi.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        updateOfficersPanel.add(txt_mi);
        txt_mi.setBounds(210, 180, 39, 27);

        jLabel5.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel5.setText("Middle Initial:");
        updateOfficersPanel.add(jLabel5);
        jLabel5.setBounds(40, 190, 165, 20);

        jLabel6.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel6.setText("Course: ");
        updateOfficersPanel.add(jLabel6);
        jLabel6.setBounds(470, 90, 88, 10);

        jLabel7.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel7.setText("Year:");
        updateOfficersPanel.add(jLabel7);
        jLabel7.setBounds(490, 140, 55, 21);

        jLabel8.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel8.setText("Section:");
        updateOfficersPanel.add(jLabel8);
        jLabel8.setBounds(460, 190, 88, 21);

        txt_crs.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        updateOfficersPanel.add(txt_crs);
        txt_crs.setBounds(550, 80, 150, 27);

        txt_year.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        updateOfficersPanel.add(txt_year);
        txt_year.setBounds(550, 130, 150, 27);

        txt_sec.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        txt_sec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_secActionPerformed(evt);
            }
        });
        updateOfficersPanel.add(txt_sec);
        txt_sec.setBounds(550, 180, 150, 27);

        txt_idnum.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        updateOfficersPanel.add(txt_idnum);
        txt_idnum.setBounds(210, 80, 240, 27);

        jLabel9.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel9.setText("ID Number:");
        updateOfficersPanel.add(jLabel9);
        jLabel9.setBounds(40, 90, 110, 21);
        updateOfficersPanel.add(jSeparator1);
        jSeparator1.setBounds(110, 60, 503, 10);

        jLabel10.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel10.setText("Edit Info");
        updateOfficersPanel.add(jLabel10);
        jLabel10.setBounds(10, 53, 99, 21);

        btn_confirm.setBackground(new java.awt.Color(0, 51, 51));
        btn_confirm.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        btn_confirm.setForeground(new java.awt.Color(255, 255, 255));
        btn_confirm.setText("Confirm");
        btn_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmActionPerformed(evt);
            }
        });
        updateOfficersPanel.add(btn_confirm);
        btn_confirm.setBounds(290, 340, 150, 65);

        cb_pos.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        cb_pos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------------", "Adviser", "Co-Adviser", "President", "Vice President", "Secretary", "Auditor", "Treasurer", "Business Manager", "P.R.O.", "Special Committee" }));
        cb_pos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_posActionPerformed(evt);
            }
        });
        updateOfficersPanel.add(cb_pos);
        cb_pos.setBounds(130, 10, 500, 40);

        btn_next.setBackground(new java.awt.Color(0, 51, 51));
        btn_next.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        btn_next.setForeground(new java.awt.Color(255, 255, 255));
        btn_next.setText("Next");
        btn_next.setEnabled(false);
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });
        updateOfficersPanel.add(btn_next);
        btn_next.setBounds(650, 340, 150, 65);

        btn_prev.setBackground(new java.awt.Color(0, 51, 51));
        btn_prev.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        btn_prev.setForeground(new java.awt.Color(255, 255, 255));
        btn_prev.setText("Previous");
        btn_prev.setEnabled(false);
        btn_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prevActionPerformed(evt);
            }
        });
        updateOfficersPanel.add(btn_prev);
        btn_prev.setBounds(480, 340, 150, 65);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/webtreats-paper-pattern-1-grey.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        updateOfficersPanel.add(jLabel2);
        jLabel2.setBounds(0, 0, 820, 430);

        OfficerPanel.addTab("Update Officers", updateOfficersPanel);

        getContentPane().add(OfficerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, 0, 820, 452));

        btn_changePass.setBackground(new java.awt.Color(0, 51, 51));
        btn_changePass.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        btn_changePass.setForeground(new java.awt.Color(255, 255, 255));
        btn_changePass.setText("Change Password");
        btn_changePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_changePassActionPerformed(evt);
            }
        });
        getContentPane().add(btn_changePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 470, 240, 65));

        btn_mainmenu.setBackground(new java.awt.Color(0, 51, 51));
        btn_mainmenu.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        btn_mainmenu.setForeground(new java.awt.Color(255, 255, 255));
        btn_mainmenu.setText("Back");
        btn_mainmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mainmenuActionPerformed(evt);
            }
        });
        getContentPane().add(btn_mainmenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 470, 150, 65));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/webtreats-paper-pattern-1-grey.jpg"))); // NOI18N
        jLabel12.setText("jLabel12");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 820, 550));

        setSize(new java.awt.Dimension(830, 580));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_secActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_secActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_secActionPerformed

    private void btn_confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmActionPerformed
        // TODO add your handling code here:
        //if textfields are changeed, confirm changes`  1
        String position = cb_pos.getSelectedItem().toString();
        boolean changed = checkChanges(position);
        if(changed){
            
            int opt;
            opt = JOptionPane.showConfirmDialog(null, "Do you want to save changes?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            switch(opt){
                case JOptionPane.YES_OPTION:
                    saveData(position);
            {
                try {
                    load();
                    OfficerPanel.setSelectedIndex(0);
                } catch (SQLException ex) {
                    Logger.getLogger(Officer.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Officer.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
                    break;
            }
        
        }
    }//GEN-LAST:event_btn_confirmActionPerformed
    
    public void saveData(String position){
        String idnum = txt_idnum.getText();
        String fname = txt_fname.getText();
        String lname = txt_lname.getText();
        String mi = txt_mi.getText(); 
        String course = txt_crs.getText();
        String year = txt_year.getText();
        String section = txt_sec.getText();
        String[] info = {idnum, lname, fname, mi, course, year,section};
        int ctr=0;
        try{
            String sql;
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/math", "root", "");
            
            
            if(counter==0){
                sql = "INSERT INTO officers(studID,lname,fname,mi, course, year,section, position,password) VALUES"+
                        "('--','--','--','--','--',3,'-','"+ position + "','"+ defaultpass +"')";
                Statement st = conn.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, sql);
                counter = 1;
            }
            
            sql = "SELECT studID, lname, fname, mi, course, year, section FROM officers WHERE position=?";
            PreparedStatement pst=conn.prepareStatement(sql,ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            pst.setString(1, position);
            ResultSet rs= pst.executeQuery();
            
            
            while(rs.next()){
                ctr++;
                if(ctr==counter){
                for(int i=1; i<=7 ; i++){
                    if(!info[i-1].equals(rs.getString(i))){
                        //JOptionPane.showMessageDialog(null, rs.getString(i));
                        rs.updateString(i, info[i-1]);
                        rs.updateRow();
                        //JOptionPane.showMessageDialog(null, rs.getString(i));
                        
                    }
                    
                }
                }            
            }
                    
                    
        }
        catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e);
        }
        catch(SQLException e){
             JOptionPane.showMessageDialog(null, e);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
        }
    }
    
    
    public boolean checkChanges(String position){
        String idnum = txt_idnum.getText();
        String fname = txt_fname.getText();
        String lname = txt_lname.getText();
        String mi = txt_mi.getText(); 
        String course = txt_crs.getText();
        String year = txt_year.getText();
        String section = txt_sec.getText();
        String[] info = {idnum, lname, fname, mi, course, year,section};
        int[] changedInfo;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/math", "root", "");
            String sql = "SELECT studID, lname, fname, mi, course, year, section FROM officers WHERE position=?";
            PreparedStatement pst=conn.prepareStatement(sql);
            pst.setString(1, position);
            ResultSet rs= pst.executeQuery();
            
            if(rs.next()){
                for(int i=1; i<=7 ; i++){
                    if(!info[i-1].equals(rs.getString(i))){
                    //JOptionPane.showMessageDialog(null, rs.getString(i));
                    return true;
                    }
                    
                }
               
                     return false;
                        
            }
            else{
            //:v
            }
                    
                    
        }
        catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e);
        }
        catch(SQLException e){
             JOptionPane.showMessageDialog(null, e);
        }
        
        return true;
    }
    
    
    private void fillForm(String pos){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/math", "root", "");
            String sql = "SELECT studID, lname, fname, mi, course, year, section FROM officers WHERE position=?";
            PreparedStatement pst=conn.prepareStatement(sql);
            pst.setString(1, pos);
            ResultSet rs= pst.executeQuery();
            //JOptionPane.showMessageDialog(null, cb_pos.getSelectedItem());
            
            if(rs.next()){
            counter = 1;
            txt_idnum.setText(rs.getString("studID"));
            txt_fname.setText(rs.getString("fname"));
            txt_lname.setText(rs.getString("lname"));
            txt_mi.setText(rs.getString("mi"));
            txt_crs.setText(rs.getString("course"));
            txt_year.setText(rs.getString("year"));
            txt_sec.setText(rs.getString("section"));
            }
            else{
            //:v
            txt_idnum.setText("");
            txt_fname.setText("");
            txt_lname.setText("");
            txt_mi.setText("");
            txt_crs.setText("");
            txt_year.setText("");
            txt_sec.setText("");
            }
                    
                    
        }
        catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e);
        }
        catch(SQLException e){
             JOptionPane.showMessageDialog(null, e);
        }
    }
    private void txt_fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fnameActionPerformed

    private void cb_posActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_posActionPerformed
        // TODO add your handling code here:
        if(cb_pos.getSelectedIndex() == 0){
            btn_confirm.setEnabled(false);
            txt_idnum.setText("");
            txt_lname.setText("");
            txt_fname.setText("");
            txt_mi.setText("");
            txt_crs.setText("");
            txt_year.setText("");
            txt_sec.setText("");
        }
        else{
            btn_confirm.setEnabled(true);
        }
         String pos = cb_pos.getSelectedItem().toString();
        if("P.R.O.".equals(pos) || "Special Committee".equals(pos)){
            counter = 0;
            fillForm(pos);
            btn_next.setEnabled(true);
        }
        else{
            fillForm(pos);
            btn_next.setEnabled(false);
            btn_prev.setEnabled(false);
        }
    }//GEN-LAST:event_cb_posActionPerformed

    private void btn_mainmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mainmenuActionPerformed
        // TODO add your handling code here:
        
        MainMenu main = new MainMenu();
        this.setVisible(false);
        main.setOfficer(officerPosition);
        main.setOfficerID(officerID);
        main.setVisible(true);
    }//GEN-LAST:event_btn_mainmenuActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        // TODO add your handling code here:
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/math", "root", "");
            String sql = "SELECT studID, lname, fname, mi, course, year, section FROM officers WHERE position=? ";
            PreparedStatement pst=conn.prepareStatement(sql, ResultSet.TYPE_SCROLL_INSENSITIVE);
            pst.setString(1, cb_pos.getSelectedItem().toString());
            String prev_id = txt_idnum.getText();
            ResultSet rs= pst.executeQuery();
            //JOptionPane.showMessageDialog(null, cb_pos.getSelectedItem());
            
            while(rs.next()){
            if(rs.getString("studID").equals(prev_id)){
                counter++;
                //JOptionPane.showMessageDialog(null, "studID equals");
                if(rs.next()){
                JOptionPane.showMessageDialog(null, "next row");
                txt_idnum.setText(rs.getString("studID"));
                txt_fname.setText(rs.getString("fname"));
                txt_lname.setText(rs.getString("lname"));
                txt_mi.setText(rs.getString("mi"));
                txt_crs.setText(rs.getString("course"));
                txt_year.setText(rs.getString("year"));
                txt_sec.setText(rs.getString("section"));
                btn_prev.setEnabled(true);
                rs.last();
                }
                else{
                    JOptionPane.showMessageDialog(null,"End of File");
                    rs.previous();
                }
            }
            
                    
            }        
        }
        catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e);
        }
        catch(SQLException e){
             JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btn_nextActionPerformed

    private void btn_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prevActionPerformed
        // TODO add your handling code here:
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/math", "root", "");
            String sql = "SELECT studID, lname, fname, mi, course, year, section FROM officers WHERE position=?";
            PreparedStatement pst=conn.prepareStatement(sql, ResultSet.TYPE_SCROLL_INSENSITIVE);
            pst.setString(1, cb_pos.getSelectedItem().toString());
            String next_id = txt_idnum.getText();
            ResultSet rs= pst.executeQuery();
            //JOptionPane.showMessageDialog(null, cb_pos.getSelectedItem());
            
            while(rs.next()){
            if(rs.getString("studID").equals(next_id)){
                if(rs.previous()){
                counter--;
                txt_idnum.setText(rs.getString("studID"));
                txt_fname.setText(rs.getString("fname"));
                txt_lname.setText(rs.getString("lname"));
                txt_mi.setText(rs.getString("mi"));
                txt_crs.setText(rs.getString("course"));
                txt_year.setText(rs.getString("year"));
                txt_sec.setText(rs.getString("section"));
                btn_prev.setEnabled(true);
                rs.last();
                }
                else{
                    JOptionPane.showMessageDialog(null,"Start of file");
                    rs.last();
                }
            }
            
            }        
                    
        }
        catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e);
        }
        catch(SQLException e){
             JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btn_prevActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        restrictions res = new restrictions(officerPosition, task);
        if(res.isRestricted()){
            OfficerPanel.setEnabledAt(1, false);
        }
        else{
            OfficerPanel.setEnabledAt(1, true);
        }
    }//GEN-LAST:event_formWindowOpened

    private void btn_changePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_changePassActionPerformed
        // TODO add your handling code here:
        frame_changePass.setVisible(true);
        frame_changePass.setLocation(400, 200);
    }//GEN-LAST:event_btn_changePassActionPerformed

    private void okbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okbtnActionPerformed
        // TODO add your handling code here:
        
        String oldpass = oldPass.getText();
        String newpass = newPass.getText();
        String confirmpass = confirmPass.getText();
        //JOptionPane.showMessageDialog(null, "hello"+ oldpass+" "+ newpass+" "+confirmpass);
        if("".equals(oldpass) || "".equals(newpass) || "".equals(confirmpass) || " ".equals(oldpass) || " ".equals(newpass) || " ".equals(confirmpass)){
            JOptionPane.showMessageDialog(null, "Please input required fields");
        }
        else if(newpass == null ? confirmpass != null : !newpass.equals(confirmpass)){
            JOptionPane.showMessageDialog(null, "New and confirmation password doesn't match!");
        }
        else{
           
            try {
                String encOldPass = encryptPass(oldpass);
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/math", "root", "");
                String sql = "SELECT studID, password, position FROM officers WHERE studID=? AND password=?";
                PreparedStatement pst=con.prepareStatement(sql,ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                pst.setString(1, officerID);
                pst.setString(2, encOldPass);
                ResultSet rs= pst.executeQuery();
                
                if(rs.next()){
                        if(!encryptPass(newpass).equals(encOldPass)){
                            int opt = JOptionPane.showConfirmDialog(rootPane, "Do you want to save changes?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                            switch(opt){
                                case JOptionPane.YES_OPTION:
                                    rs.updateString("password", encryptPass(newpass));
                                    rs.updateRow();
                                    //JOptionPane.showMessageDialog(null, "Old Password: "+oldpass+"New Password: "+newpass);
                                    JOptionPane.showMessageDialog(null, "New password saved!");
                                    frame_changePass.setVisible(false);
                            }
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Choose a new password!");
                            oldPass.setText("");
                            newPass.setText("");
                            confirmPass.setText("");
                        }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Incorrect old password!");
                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Officer.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Officer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                
    }//GEN-LAST:event_okbtnActionPerformed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        // TODO add your handling code here:
        oldPass.setText("");
        newPass.setText("");
        confirmPass.setText("");
        
        frame_changePass.setVisible(false);
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void confirmPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPassActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_confirmPassActionPerformed

    private void newPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPassKeyPressed
        // TODO add your handling code here:
        String ar = Character.toString(evt.getKeyChar());
        
        if(" ".equals(ar)){
            newPass.setText(newPass.getText().trim());
        }
    }//GEN-LAST:event_newPassKeyPressed

    private void newPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPassKeyReleased
        // TODO add your handling code here:
        
        String ar = Character.toString(evt.getKeyChar());
        
        if(" ".equals(ar)){
            newPass.setText(newPass.getText().trim());
        }
    }//GEN-LAST:event_newPassKeyReleased
    
    public String encryptPass(String Password){
        String generatedPassword = null;
        try {
            // Create MessageDigest instance for MD5
            MessageDigest md = MessageDigest.getInstance("MD5");
            //Add password bytes to digest
            md.update(Password.getBytes());
            //Get the hash's bytes 
            byte[] bytes = md.digest();
            //This bytes[] has bytes in decimal format;
            //Convert it to hexadecimal format
            StringBuilder sb = new StringBuilder();
            for(int i=0; i< bytes.length ;i++)
            {
                sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16).substring(1));
            }
            //Get complete hashed password in hex format
            generatedPassword = sb.toString();
        } 
        catch (NoSuchAlgorithmException e) 
        {
            e.printStackTrace();
        }
        //System.out.println(generatedPassword);
        return generatedPassword;
    }
    /**
     * @param args the command line arguments
     */
    
    public void setOfficerID(String idnum){
        this.officerID = idnum;
    
    }
    public void setOfficer(String officer){
        this.officerPosition = officer;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(events_create.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(events_create.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(events_create.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(events_create.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Officer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane OfficerPanel;
    private javax.swing.JButton btn_changePass;
    private javax.swing.JButton btn_confirm;
    private javax.swing.JButton btn_mainmenu;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_prev;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JComboBox<String> cb_pos;
    private javax.swing.JPasswordField confirmPass;
    private javax.swing.JFrame frame_changePass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPasswordField newPass;
    private javax.swing.JScrollPane officerList;
    private javax.swing.JPanel officerListPanel;
    private javax.swing.JTable officersTable;
    private javax.swing.JButton okbtn;
    private javax.swing.JPasswordField oldPass;
    private javax.swing.JTextField txt_crs;
    private javax.swing.JTextField txt_fname;
    private javax.swing.JTextField txt_idnum;
    private javax.swing.JTextField txt_lname;
    private javax.swing.JTextField txt_mi;
    private javax.swing.JTextField txt_sec;
    private javax.swing.JTextField txt_year;
    private javax.swing.JPanel updateOfficersPanel;
    // End of variables declaration//GEN-END:variables
}
