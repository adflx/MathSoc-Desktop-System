package views;

import java.awt.event.KeyEvent;
import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
public class Expense extends javax.swing.JFrame {
ResultSet rs =null;
  Connection con = null;
  PreparedStatement st=null;    
   String officerPosition;
   String officerID;
   final String task = "Expense";
    public Expense() {
        
        initComponents();
         Date now = new Date();
         SimpleDateFormat watsz= new SimpleDateFormat("MM-dd-yyyy");
       ((JTextField)jcdate.getDateEditor().getUiComponent()).setText(watsz.format(now));
        display_data();
        ((JTextField)jcdate.getDateEditor().getUiComponent()).setEditable(false);
        tfid.setVisible(false);
    }
private void display_data(){
      //SELECT * FROM `expenses` ORDER BY `expenses`.`DATE` DESC
     try {
               con = DriverManager.getConnection("jdbc:mysql://localhost/math","root","");
      //   String gow ="select ID,DATE,ITEM_DESCRIPTION,QUANTITY,AMOUNT from expenses";
           String gow ="SELECT * FROM `expenses` ORDER BY `expenses`.`DATE` DESC";
        
               st =  con.prepareStatement(gow); 
           st.execute(gow);
          rs = st.executeQuery();
     tbl.setModel(DbUtils.resultSetToTableModel(rs));
     }
     catch(Exception e){          
         
     }

 }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        disapprove = new javax.swing.JRadioButton();
        disapprove_btn = new javax.swing.JButton();
        approve1 = new javax.swing.JRadioButton();
        approve = new javax.swing.JRadioButton();
        approve_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        upbtn = new javax.swing.JButton();
        tfamo = new javax.swing.JTextField();
        tfdesc = new javax.swing.JTextField();
        tfquan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        addbtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tfid = new javax.swing.JTextField();
        jcdate = new com.toedter.calendar.JDateChooser();
        back = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Expense"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup1.add(disapprove);
        disapprove.setText("Pending");
        disapprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disapproveActionPerformed(evt);
            }
        });
        jPanel1.add(disapprove, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 280, 90, -1));

        disapprove_btn.setBackground(new java.awt.Color(0, 51, 51));
        disapprove_btn.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        disapprove_btn.setForeground(new java.awt.Color(255, 255, 255));
        disapprove_btn.setText("PENDING");
        disapprove_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disapprove_btnActionPerformed(evt);
            }
        });
        jPanel1.add(disapprove_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 330, 110, 40));

        buttonGroup1.add(approve1);
        approve1.setText("Show All");
        approve1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approve1ActionPerformed(evt);
            }
        });
        jPanel1.add(approve1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 280, 90, 20));

        buttonGroup1.add(approve);
        approve.setText("Approve");
        approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveActionPerformed(evt);
            }
        });
        jPanel1.add(approve, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 280, 100, 20));

        approve_btn.setBackground(new java.awt.Color(0, 51, 51));
        approve_btn.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        approve_btn.setForeground(new java.awt.Color(255, 255, 255));
        approve_btn.setText("APPROVE");
        approve_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approve_btnActionPerformed(evt);
            }
        });
        jPanel1.add(approve_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 330, 110, 40));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Expenses", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date", "Item Description", "Aquantity", "Amount"
            }
        ));
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        tbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 834, 258));

        upbtn.setBackground(new java.awt.Color(0, 51, 51));
        upbtn.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        upbtn.setForeground(new java.awt.Color(255, 255, 255));
        upbtn.setText("Update");
        upbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upbtnActionPerformed(evt);
            }
        });
        jPanel1.add(upbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 520, 150, 65));

        tfamo.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        tfamo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfamoKeyTyped(evt);
            }
        });
        jPanel1.add(tfamo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 470, 254, -1));

        tfdesc.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jPanel1.add(tfdesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, 461, -1));

        tfquan.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        tfquan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfquanKeyTyped(evt);
            }
        });
        jPanel1.add(tfquan, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 420, 254, -1));

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel4.setText("Amount");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 470, -1, -1));

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel3.setText("Quantity");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 430, -1, -1));

        addbtn.setBackground(new java.awt.Color(0, 51, 51));
        addbtn.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        addbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbtn.setText("Add");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        jPanel1.add(addbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 520, 150, 65));

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setText("Item Description");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, -1, -1));

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel1.setText("Date");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, -1, -1));

        tfid.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jPanel1.add(tfid, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 257, -1));

        jcdate.setDateFormatString("MM-dd-yyyy");
        jcdate.setMaxSelectableDate(new java.util.Date(253370739677000L));
        jcdate.setMinSelectableDate(new java.util.Date(1451581277000L));
        jcdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jcdateKeyTyped(evt);
            }
        });
        jPanel1.add(jcdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 257, 30));

        back.setBackground(new java.awt.Color(0, 51, 51));
        back.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 280, 150, 65));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/webtreats-paper-pattern-1-grey.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 640));

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

       public void reset(){
     tfdesc.setText("");tfquan.setText("");tfamo.setText("");
                        
}    

    
    
    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
          java.text.SimpleDateFormat fmt1 = new java.text.SimpleDateFormat("MM-dd-yyyy");
       String sdate = fmt1.format(jcdate.getDate());
         
        DefaultTableModel model=(DefaultTableModel) tbl.getModel();
        if(!sdate.trim().equals("") && !tfdesc.getText().trim().equals("") && !tfquan.getText().trim().equals("") && !tfamo.getText().trim().equals("") ){
            int total= Integer.parseInt(tfquan.getText())* Integer.parseInt(tfamo.getText()); 
            Connection con = null;
            model.addRow(new Object[]{sdate,tfdesc.getText(),tfquan.getText(),tfamo.getText()});
             String goinsert=("insert into expenses (DATE,ITEM_DESCRIPTION, QUANTITY,AMOUNT,TOTAL,STATUS) " + "values"  + "('"+sdate+"','" +tfdesc.getText()+"','"+tfquan.getText()+"','"+tfamo.getText()+"','"+total+"','PENDING')");
      try{
          con = DriverManager.getConnection("jdbc:mysql://localhost/math","root","");
          Statement st =  con.prepareStatement(goinsert);
          st.execute(goinsert);
          st = con.createStatement();
          display_data();
          JOptionPane.showMessageDialog(null,"INSERTED");
          reset();
      }catch(Exception ex){
         JOptionPane.showMessageDialog(null,ex.getMessage()); } 
           
        }
       else{
         JOptionPane.showMessageDialog(null, "You need to fill all information","System Message",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_addbtnActionPerformed

    private void upbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upbtnActionPerformed
    
        java.text.SimpleDateFormat fmt1 = new java.text.SimpleDateFormat("MM-dd-yyyy");
       String sdate = fmt1.format(jcdate.getDate());
      
       DefaultTableModel model = (DefaultTableModel) tbl.getModel();
       if(tbl.getSelectedRow()==-1)
       {
           if(tbl.getRowCount()==0)
           {
            JOptionPane.showMessageDialog(null, "Table is empty","System Message",JOptionPane.ERROR_MESSAGE);    
           }
           else{
           JOptionPane.showMessageDialog(null, "You must select in the ROW","System Message",JOptionPane.ERROR_MESSAGE); 
                }
       }else{
           
           
           if(!sdate.trim().equals("") && !tfdesc.getText().trim().equals("") && !tfquan.getText().trim().equals("") && !tfamo.getText().trim().equals("") )
           {
               int total= Integer.parseInt(tfquan.getText())* Integer.parseInt(tfamo.getText());
               model.setValueAt(tfid.getText(),tbl.getSelectedRow(),0);
                   model.setValueAt(sdate,tbl.getSelectedRow(),1);
                   model.setValueAt(tfdesc.getText(),tbl.getSelectedRow(),2);
                   model.setValueAt(tfquan.getText(),tbl.getSelectedRow(),3);
                   model.setValueAt(tfamo.getText(),tbl.getSelectedRow(),4);
                     Connection con = null;
                    
                     String goinsert="UPDATE expenses set DATE ='"+sdate+"',ITEM_DESCRIPTION ='" 
                    +tfdesc.getText()+"', QUANTITY='"+tfquan.getText()+"',AMOUNT= '"+tfamo.getText()
                             +"',TOTAL= '"+total+"' where ID='"+tfid.getText()+"' ";
                 try{
                       con = DriverManager.getConnection("jdbc:mysql://localhost/math","root","");
                       Statement st =  con.prepareStatement(goinsert);
                       st.execute(goinsert);
                       st = con.createStatement();
                       reset();
                       display_data();
                       JOptionPane.showMessageDialog(null,"Data UPDATED");    
                    }      catch(Exception ex){
                                                 JOptionPane.showMessageDialog(null,ex.getMessage());
                                              }
       }
         else{
                JOptionPane.showMessageDialog(null, "You need to fill all information","System Message",JOptionPane.ERROR_MESSAGE);

            } 
           
             }  
                 
       
    }//GEN-LAST:event_upbtnActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
   
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        tfid.setText(model.getValueAt(tbl.getSelectedRow(),0).toString());
        ((JTextField)jcdate.getDateEditor().getUiComponent()).setText(model.getValueAt(tbl.getSelectedRow(),1).toString());
        tfdesc.setText(model.getValueAt(tbl.getSelectedRow(),2).toString());
        tfquan.setText(model.getValueAt(tbl.getSelectedRow(),3).toString());
        tfamo.setText(model.getValueAt(tbl.getSelectedRow(),4).toString());
    }//GEN-LAST:event_tblMouseClicked

    private void jcdateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcdateKeyTyped

    }//GEN-LAST:event_jcdateKeyTyped

    private void tblKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tblKeyTyped

    private void tfquanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfquanKeyTyped
       char c=evt.getKeyChar();
       if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)){
           evt.consume();
       }
       if (tfquan.getText().length()>=4) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tfquanKeyTyped

    private void tfamoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfamoKeyTyped
      char c=evt.getKeyChar();
       if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)){
           evt.consume();
       }
       if (tfamo.getText().length()>=4) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tfamoKeyTyped

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        MainMenu a = new MainMenu();
        a.setVisible(true);
        a.setOfficer(officerPosition);
        a.setOfficerID(officerID);
        Expense.this.setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    private void approve1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approve1ActionPerformed
        display_data();
    }//GEN-LAST:event_approve1ActionPerformed

    private void disapproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disapproveActionPerformed
        // TODO add your handling code here:
        display_colstat("PENDING");
    }//GEN-LAST:event_disapproveActionPerformed

    private void approveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveActionPerformed
        // TODO add your handling code here:
        display_colstat("APPROVED");
    }//GEN-LAST:event_approveActionPerformed

    private void display_colstat(String status){
      
     try {
          con = DriverManager.getConnection("jdbc:mysql://localhost/math","root","");
         String gow ="select * from expenses where STATUS like '"+status+"'";
          st =  con.prepareStatement(gow); 
           st.execute(gow);          rs = st.executeQuery();
     tbl.setModel(DbUtils.resultSetToTableModel(rs));
     }
     catch(Exception e){          
         
     }
    }
    
    
    
    private void disapprove_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disapprove_btnActionPerformed
        java.text.SimpleDateFormat fmt1 = new java.text.SimpleDateFormat("MM-dd-yyyy");
        String sdate = fmt1.format(jcdate.getDate());

        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        if(tbl.getSelectedRow()==-1)
        {
            if(tbl.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Table is empty","System Message",JOptionPane.ERROR_MESSAGE);

            }else{
                JOptionPane.showMessageDialog(null, "You must select in the ROW","System Message",JOptionPane.ERROR_MESSAGE);

            }
        }else{
             if(!sdate.trim().equals("") && !tfdesc.getText().trim().equals("") && !tfquan.getText().trim().equals("") && !tfamo.getText().trim().equals("") )
           {
               model.setValueAt(tfid.getText(),tbl.getSelectedRow(),0);
                   model.setValueAt(sdate,tbl.getSelectedRow(),1);
                   model.setValueAt(tfdesc.getText(),tbl.getSelectedRow(),2);
                   model.setValueAt(tfquan.getText(),tbl.getSelectedRow(),3);
                   model.setValueAt(tfamo.getText(),tbl.getSelectedRow(),4);
                     Connection con = null;
                String goinsert="UPDATE expenses set STATUS = 'PENDING' where ID='"+tfid.getText()+"' ";
                try{
                    con = DriverManager.getConnection("jdbc:mysql://localhost/math","root","");
                    Statement st =  con.prepareStatement(goinsert);
                    st.execute(goinsert);
                    st = con.createStatement();
                    reset();
                    display_data();
                    JOptionPane.showMessageDialog(null,"Data PENDING");
                }      catch(Exception ex){
                    JOptionPane.showMessageDialog(null,ex.getMessage());
                }
            }

            else{
                JOptionPane.showMessageDialog(null, "You need to fill all information","System Message",JOptionPane.ERROR_MESSAGE);

            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_disapprove_btnActionPerformed

    private void approve_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approve_btnActionPerformed
        java.text.SimpleDateFormat fmt1 = new java.text.SimpleDateFormat("MM-dd-yyyy");
        String sdate = fmt1.format(jcdate.getDate());

        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        if(tbl.getSelectedRow()==-1)
        {
            if(tbl.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Table is empty","System Message",JOptionPane.ERROR_MESSAGE);

            }else{
                JOptionPane.showMessageDialog(null, "You must select in the ROW","System Message",JOptionPane.ERROR_MESSAGE);

            }
        }else{
             if(!sdate.trim().equals("") && !tfdesc.getText().trim().equals("") && !tfquan.getText().trim().equals("") && !tfamo.getText().trim().equals("") )
           {
               model.setValueAt(tfid.getText(),tbl.getSelectedRow(),0);
                   model.setValueAt(sdate,tbl.getSelectedRow(),1);
                   model.setValueAt(tfdesc.getText(),tbl.getSelectedRow(),2);
                   model.setValueAt(tfquan.getText(),tbl.getSelectedRow(),3);
                   model.setValueAt(tfamo.getText(),tbl.getSelectedRow(),4);
                     Connection con = null;
                String goinsert="UPDATE expenses set STATUS = 'APPROVED' where ID='"+tfid.getText()+"' ";
                try{
                    con = DriverManager.getConnection("jdbc:mysql://localhost/math","root","");
                    Statement st =  con.prepareStatement(goinsert);
                    st.execute(goinsert);
                    st = con.createStatement();
                    reset();
                    display_data();
                    JOptionPane.showMessageDialog(null,"Data APPROVED");
                }      catch(Exception ex){
                    JOptionPane.showMessageDialog(null,ex.getMessage());
                }
            }

            else{
                JOptionPane.showMessageDialog(null, "You need to fill all information","System Message",JOptionPane.ERROR_MESSAGE);

            }

        }

    }//GEN-LAST:event_approve_btnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        restrictions res = new restrictions(officerPosition, task);
        if(res.isRestricted()){
            addbtn.setEnabled(false);
            upbtn.setEnabled(false);
              approve_btn.setEnabled(false);
                disapprove_btn.setEnabled(false);
            
        }
        else{
            addbtn.setEnabled(true);
            upbtn.setEnabled(true);
            if(officerPosition.equalsIgnoreCase("Tresurer")||officerPosition.equalsIgnoreCase("Auditor")){
                approve_btn.setEnabled(false);
                disapprove_btn.setEnabled(false);
            }
            else{
                approve_btn.setEnabled(true);
                disapprove_btn.setEnabled(true);
            }
        }
    }//GEN-LAST:event_formWindowOpened

    public void setOfficer(String officer){
        this.officerPosition = officer;
    }
    
    public void setOfficerID(String idnum){
        this.officerID = idnum;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Expense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Expense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Expense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Expense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new Expense().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JRadioButton approve;
    private javax.swing.JRadioButton approve1;
    private javax.swing.JButton approve_btn;
    private javax.swing.JButton back;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton disapprove;
    private javax.swing.JButton disapprove_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jcdate;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField tfamo;
    private javax.swing.JTextField tfdesc;
    private javax.swing.JTextField tfid;
    private javax.swing.JTextField tfquan;
    private javax.swing.JButton upbtn;
    // End of variables declaration//GEN-END:variables
}
